version: '3.4'
services:
  
  zookeeper:
    image: harbor.inventec.com/hub/zookeeper:3.5.5
    ports:
      - "2181:2181"
  
  broker1:
    image: harbor.inventec.com/hub/wurstmeister/kafka:2.12-2.0.1
    hostname: broker1
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
        mode: host
    volumes:
      - /disk/kafka:/kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_DIRS: /kafka/kafka-logs-broker1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.191.5.218:9092
      KAFKA_LOG_CLEANUP_POLICY: delete,compact
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 21474836480
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 86400000
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_HEAP_OPTS: "-Xmx4g -Xms4g"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9999"
      JMX_PORT: 9999
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.labels.alias == bdc01.infra.dev.tj.itc.inventec
      resources:
        limits:
          cpus: "2"
          memory: 4g

  broker2:
    image: harbor.inventec.com/hub/wurstmeister/kafka:2.12-2.0.1
    hostname: broker2
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
        mode: host
    volumes:
      - /disk/kafka:/kafka
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LOG_DIRS: /kafka/kafka-logs-broker2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.191.5.233:9092
      KAFKA_LOG_CLEANUP_POLICY: delete,compact
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 21474836480
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 86400000
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_HEAP_OPTS: "-Xmx4g -Xms4g"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9999"
      JMX_PORT: 9999
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.labels.alias == bdc03.infra.dev.tj.itc.inventec
      resources:
        limits:
          cpus: "2"
          memory: 4g

  broker3:
    image: harbor.inventec.com/hub/wurstmeister/kafka:2.12-2.0.1
    hostname: broker3
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
        mode: host
    volumes:
      - /disk/kafka:/kafka
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LOG_DIRS: /kafka/kafka-logs-broker3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.191.4.54:9092
      KAFKA_LOG_CLEANUP_POLICY: delete,compact
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 21474836480
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 86400000
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_HEAP_OPTS: "-Xmx4g -Xms4g"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9999"
      JMX_PORT: 9999
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.labels.alias == bdc04.infra.dev.tj.itc.inventec
      resources:
        limits:
          cpus: "2"
          memory: 4g

  kafka-connector:
    image: confluentinc/cp-kafka-connect:5.1.3
    hostname: kafka-connector
    ports:
      - "8083:8083"
    volumes:
      - /opt/kafka/plugins:/usr/share/kafka/plugins
    environment:
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_BOOTSTRAP_SERVERS: broker1:9092,broker2:9092,broker3:9092
      CONNECT_GROUP_ID: kafka-sink-connector
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connector
      CONNECT_REST_PORT: 8083
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_LOG4J_ROOT_LOGLEVEL: DEBUG
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "2"
          memory: 4g

  kafka-connect-ui:
    image: landoop/kafka-connect-ui:latest
    hostname: kafka-connect-ui
    ports:
      - "8084:8000"
    environment:
      CONNECT_URL: "http://kafka-connector:8083/"
      PROXY: "true"
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 2g

  # kafka-exporter:
  #   image: danielqsj/kafka-exporter:v1.2.0
  #   ports:
  #     # Following the scheme, https://github.com/prometheus/prometheus/wiki/Default-port-allocations
  #     - "9308:9308"
  #   command: "--kafka.server=broker1:9092 --kafka.server=broker2:9092 --kafka.server=broker3:9092"
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #     resources:
  #       limits:
  #         memory: 128M
  #       reservations:
  #         memory: 64M      

  kafka-manager:
    image: harbor.inventec.com/hub/hlebalbau/kafka-manager:2.0.0.2
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: zookeeper:2181
    command: -Dpidfile.path=/dev/null
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 2g

networks:
  default:
    external:
      name: gpdb5
