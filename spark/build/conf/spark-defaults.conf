#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default system properties included when running spark-submit.
# This is useful for setting default environmental settings.

# Example:
# spark.master                     spark://master:7077
# spark.eventLog.enabled           true
# spark.eventLog.dir               hdfs://namenode:8021/directory
# spark.serializer                 org.apache.spark.serializer.KryoSerializer
# spark.driver.memory              5g
# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers="one two three"

spark.eventLog.enabled                  true
spark.eventLog.dir                      /tmp/spark-events
spark.serializer                        org.apache.spark.serializer.KryoSerializer
spark.driver.cores                      4
spark.driver.memory                     8g
spark.driver.maxResultSize              8g
spark.cores.max                         40
spark.executor.cores                    2
spark.executor.memory                   2g
spark.executor.heartbeatInterval        30s

# Default timeout for all network interactions.
spark.network.timeout                   300s

# If set to "true", performs speculative execution of tasks. 
# This means if one or more tasks are running slowly in a stage, 
# they will be re-launched.
# spark.speculation                     true

# ************ Dynamic Allocation **************
# Whether to use dynamic resource allocation, which scales the number of executors registered with this application up and down based on the workload
spark.dynamicAllocation.enabled         false
# Dynamic allocation of executors requires the external shuffle service. You may enable this through spark.shuffle.service.enabled.
spark.shuffle.service.enabled           false
# If dynamic allocation is enabled and an executor has been idle for more than this duration, the executor will be removed
spark.dynamicAllocation.executorIdleTimeout 60s