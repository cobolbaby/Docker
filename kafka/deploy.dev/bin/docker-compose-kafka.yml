version: '3.4'
services:

  broker1:
    image: ${REGISTRY}/hub/confluentinc/cp-kafka:${BROKER_VERSION}
    hostname: broker1
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
        mode: host
      - target: 9990
        published: 9990
        protocol: tcp
        mode: host
      - target: 9999
        published: 9999
        protocol: tcp
        mode: host
    volumes:
      - /disk/kafka:/kafka
      - /opt/kafka/jmx_exporter:/opt/kafka/jmx_exporter
      - /etc/localtime:/etc/localtime:ro
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_DIRS: /kafka/kafka-logs-broker1
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER}
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${BROKER_NODE1_IP}:9092
      KAFKA_LOG_CLEANUP_POLICY: delete,compact
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 21474836480
      # 墓碑消息存留时间
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 86400000
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      # 不允许自动创建Topic，需要手动创建
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      # 用于端到端测试
      KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE: LogAppendTime
      KAFKA_HEAP_OPTS: "-Xmx4g -Xms4g"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=${BROKER_NODE1_IP} -Dcom.sun.management.jmxremote.rmi.port=9999"
      JMX_PORT: 9999
      KAFKA_OPTS: "-javaagent:/opt/kafka/jmx_exporter/jmx_prometheus_javaagent-0.11.0.jar=9990:/opt/kafka/jmx_exporter/kafka-agent.yml"
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.labels.alias == bdc01.infra.dev.tj.itc.inventec
      resources:
        limits:
          cpus: "2"
          memory: 6g

  broker2:
    image: ${REGISTRY}/hub/confluentinc/cp-kafka:${BROKER_VERSION}
    hostname: broker2
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
        mode: host
      - target: 9990
        published: 9990
        protocol: tcp
        mode: host
      - target: 9999
        published: 9999
        protocol: tcp
        mode: host
    volumes:
      - /disk/kafka:/kafka
      - /opt/kafka/jmx_exporter:/opt/kafka/jmx_exporter
      - /etc/localtime:/etc/localtime:ro
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_LOG_DIRS: /kafka/kafka-logs-broker2
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER}
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${BROKER_NODE2_IP}:9092
      KAFKA_LOG_CLEANUP_POLICY: delete,compact
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 21474836480
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 86400000
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE: LogAppendTime
      KAFKA_HEAP_OPTS: "-Xmx4g -Xms4g"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=${BROKER_NODE2_IP} -Dcom.sun.management.jmxremote.rmi.port=9999"
      JMX_PORT: 9999
      KAFKA_OPTS: "-javaagent:/opt/kafka/jmx_exporter/jmx_prometheus_javaagent-0.11.0.jar=9990:/opt/kafka/jmx_exporter/kafka-agent.yml"
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.labels.alias == bdc03.infra.dev.tj.itc.inventec
      resources:
        limits:
          cpus: "2"
          memory: 6g

  broker3:
    image: ${REGISTRY}/hub/confluentinc/cp-kafka:${BROKER_VERSION}
    hostname: broker3
    ports:
      - target: 9092
        published: 9092
        protocol: tcp
        mode: host
      - target: 9990
        published: 9990
        protocol: tcp
        mode: host
      - target: 9999
        published: 9999
        protocol: tcp
        mode: host
    volumes:
      - /disk/kafka:/kafka
      - /opt/kafka/jmx_exporter:/opt/kafka/jmx_exporter
      - /etc/localtime:/etc/localtime:ro
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_LOG_DIRS: /kafka/kafka-logs-broker3
      KAFKA_ZOOKEEPER_CONNECT: ${ZOOKEEPER}
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://${BROKER_NODE3_IP}:9092
      KAFKA_LOG_CLEANUP_POLICY: delete,compact
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 21474836480
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 86400000
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE: LogAppendTime
      KAFKA_HEAP_OPTS: "-Xmx4g -Xms4g"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_JMX_OPTS: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=${BROKER_NODE3_IP} -Dcom.sun.management.jmxremote.rmi.port=9999"
      JMX_PORT: 9999
      KAFKA_OPTS: "-javaagent:/opt/kafka/jmx_exporter/jmx_prometheus_javaagent-0.11.0.jar=9990:/opt/kafka/jmx_exporter/kafka-agent.yml"
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints: 
          - node.labels.alias == bdc04.infra.dev.tj.itc.inventec
      resources:
        limits:
          cpus: "2"
          memory: 6g

  kafka-connector:
    image: ${REGISTRY}/development/cp-kafka-connect:${BROKER_VERSION}
    hostname: kafka-connector
    ports:
      - "8083:8083"
    volumes:
      - /etc/localtime:/etc/localtime:ro
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker1:9092,broker2:9092,broker3:9092
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connector
      CONNECT_REST_PORT: 8083
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/kafka/plugins
      CONNECT_GROUP_ID: kafka-sink-connector
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "2"
          memory: 4g

  kafka-connect-ui:
    image: ${REGISTRY}/hub/landoop/kafka-connect-ui:0.9.7
    hostname: kafka-connect-ui
    ports:
      - "8084:8000"
    environment:
      CONNECT_URL: "http://kafka-connector:8083/"
      PROXY: "true"
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 128M

  kafka-manager:
    image: ${REGISTRY}/hub/hlebalbau/kafka-manager:2.0.0.2
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: ${ZOOKEEPER}
    command: -Dpidfile.path=/dev/null
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 1g

  kafka-exporter:
    image: ${REGISTRY}/hub/danielqsj/kafka-exporter:v1.2.0
    ports:
      # Following the scheme, https://github.com/prometheus/prometheus/wiki/Default-port-allocations
      - "9308:9308"
    command: --kafka.server=broker1:9092 --kafka.server=broker2:9092 --kafka.server=broker3:9092
    deploy:
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 128M
        reservations:
          cpus: "1"
          memory: 64M

networks:
  default:
    external:
      name: gpdb5
