user www-data;
# 非root用户不能listen 1024以下的端口。
# nginx.conf配置user nobody; listen <1024+>;
# user nobody;
worker_processes 1;
pid /run/nginx.pid;

# 加载动态模块
load_module "modules/ngx_http_image_filter_module.so";

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##

    # ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    # ssl_prefer_server_ciphers on;

    ##
    # Logging Settings
    ##
    log_format  logstash_json   '{ "@timestamp": "$time_local", '
                                '"@fields": { '
                                '"remote_user": "$http_x_forwarded_for", '
                                '"request_method": "$request_method", '
                                '"url": "$uri", '
                                '"body_bytes_sent":"$body_bytes_sent", '
                                '"response_time":"$request_time", '
                                '"status": "$status" } }';
    
    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";
    gzip_buffers 4 16k;
    gzip_min_length 1k;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # support custom headers with underline
    # "underscores_in_headers" is not terminated by ";"
    underscores_in_headers on;

    # nginx默认上传文件的大小是1M
    client_max_body_size 100m;

    # key domain setting , register domain 
    #server {
    #    listen       80;
    #    server_name  app.shujuguan.cn;
    #    rewrite ^(.*)$ https://$host$1 permanent; 
    #}

    upstream backend1 {
        #server cobol.chart2.com:1080;
        server majia.chart2.com:1080;
        #keekalive 60;
    }
    
    upstream backend2 {
        server cobol.chart2.com:1080;
        # server majia.chart2.com:1080;
        #keekalive 60;
    }

    server {
        listen 80;
        server_name cobol.chart2.com;
        # root /etc/nginx/html;
        # 定义首页索引文件的名称
        # index index.php index.html index.htm;  
        access_log /var/log/nginx/access_port_80.log logstash_json; # 使用刚才定义的日志格式
        error_log /var/log/nginx/error_port_80.log;

        # 只匹配 / 查询。
        #location = / {
        #
        #}

        # 默认请求
        # 匹配任何查询，因为所有请求都已 / 开头。但是正则表达式规则和长的块规则将被优先和查询匹配
        location / {
            # set $sub_domain "app";
            # ~* 为不区分大小写匹配 
            # if ( $host ~* (.*)\.chart2\.com ){
            #    set $sub_domain $1;
            # }
            # rewrite ^/login$ /orglogin/$sub_domain break;
            # rewrite ^/signin$ /orglogin/$sub_domain break;
            
            proxy_pass http://backend1;

            # 配置超时时间
            # 连接超时时间          
            proxy_connect_timeout       1s;
            # 响应超时时间
            proxy_read_timeout          60s; 

            proxy_redirect off;
            # 重置host头
            proxy_set_header Host $http_host;
            # proxy_set_header X-Real-Scheme    $scheme;  
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Client-IP $remote_addr;
            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        }

        # 配置502
        error_page  502  /502.html;
        location = /502.html {
            root   /usr/share/nginx/html;
        }

        #location /feapp/ {
        #    alias /opt/shujuguan/www/feapp/;
        #    add_header Access-Control-Allow-Origin *;
        #}

        # 静态文件，nginx自己处理
        # ~ 为区分大小写匹配
        #location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|html|htm|css)$ {
        #   support cors
        #   add_header Access-Control-Allow-Origin *;
        
        #}

        # ~* 为不区分大小写匹配
        #location ~* \.(eot|ttf|woff)$ {
        #   support cors
        #   add_header Access-Control-Allow-Origin *;
            
            #过期30天，静态文件不怎么更新，过期可以设大一点，
            #如果频繁更新，则可以设置得小一点。
        #   expires 30d;
        #}

        #关闭favicon.ico不存在时记录日志
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # 不允许访问隐藏文件例如 .htaccess, .htpasswd, .DS_Store (Mac).
        location ~ /\. {
            deny all;
            log_not_found off;
            access_log off;
        }

        location ~ /MP_verify_ {
            root /opt/shujuguan/weixinmp/;
        }

    }

    server {
        listen 9000;
        server_name cobol.chart2.com;
        # root /etc/nginx/html;
        # 定义首页索引文件的名称
        # index index.php index.html index.htm;  
        access_log  /var/log/nginx/access_port_9000.log;
        error_log  /var/log/nginx/error_port_9000.log;

        # 只匹配 / 查询。
        #location = / {
        #
        #}

        # 默认请求
        # 匹配任何查询，因为所有请求都已 / 开头。但是正则表达式规则和长的块规则将被优先和查询匹配
        location / {
            # set $sub_domain "";
            # ~* 为不区分大小写匹配 
            # if ( $host ~* (.*)\.chart2\.com ) {
            #     set $sub_domain $1;
            # }
            # rewrite ^/login$ /orglogin/$sub_domain last;
            # rewrite ^/signin$ /orglogin/$sub_domain last;

            # 用image-filter做图片裁切
            # ?x-oss-process=image/resize,m_fill,h_100,w_100
            if ( $args ~* x-oss-process=image/resize,(.*?,)h_(\d+),w_(\d+) ) {
                # return 200 '{"status": 0, "result": "match target image"}';
                set $h $2;
                set $w $3;
                # rewrite regex replacement [flag];只能对域名后边的除参数外的字符串起作用
                rewrite (.*)/(.+?)\.(jpg|gif|png|jpeg) $1/$2_h_${h}_w_${w}.$3 last;
            }

            proxy_pass http://backend2;
            # 配置超时时间
            # 连接超时时间          
            proxy_connect_timeout       1s;
            # 响应超时时间
            proxy_read_timeout          60s; 

            proxy_redirect off;
            # 重置host头
            proxy_set_header Host $http_host;
            # proxy_set_header X-Real-Scheme    $scheme;  
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Client-IP $remote_addr;
            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
        }

        # 配置502
        error_page  502  /502.html;
        location = /502.html {
            root   /usr/share/nginx/html;
        }

        # Nginx location 能否匹配到问号里的参数？
        # No Way
        location ~* (.*)/(.+?)_h_(\d+)_w_(\d+)\.(jpg|gif|png|jpeg)$ {
            # height与width只能通过location匹配获取，无法由rewrite得出
            set $h $3;
            set $w $4;
            # return 200 '{"status": 0, "result": "match rewrited image"}';
            # rewrite regex replacement [flag];只能对域名后边的除参数外的字符串起作用
            # break停止执行当前虚拟主机的后续rewrite指令集
            rewrite (.*)/(.+?)_h_(\d+)_w_(\d+)\.(jpg|gif|png|jpeg)$ $1/$2.$5 break;
            # 根据给定的长宽生成缩略图
            image_filter resize $w $h;
            # 原图最大2M，要裁剪的图片超过2M返回415错误，需要调节参数image_filter_buffer 需要调节参数image_filter_buffer 
            image_filter_buffer 10M;
            #error_page 415 = /empty;

            proxy_pass http://backend2;
        }

        location = /empty {
            empty_gif;
        }

        #关闭favicon.ico不存在时记录日志
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # 不允许访问隐藏文件例如 .htaccess, .htpasswd, .DS_Store (Mac).
        location ~ /\. {
            deny all;
            log_not_found off;
            access_log off;
        }
    }
}


#mail {
#   # See sample authentication script at:
#   # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#   # auth_http localhost/auth.php;
#   # pop3_capabilities "TOP" "USER";
#   # imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#   server {
#       listen     localhost:110;
#       protocol   pop3;
#       proxy      on;
#   }
# 
#   server {
#       listen     localhost:143;
#       protocol   imap;
#       proxy      on;
#   }
#}
